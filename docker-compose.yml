version: "3"

services:
  rollplaydb:
    image: postgres:15
    hostname: postgres
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    # volumes:
    #   - ./postgres:/var/lib/postgresql/data:z
    container_name: rollplay-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    expose:
      - 5432
    networks:
      - rollplay
  migrate:
    image: migrate/migrate:v4.15.2
    # profiles: ["tools"]
    volumes:
      - ./migrations:/migrations
    env_file:
      - ./.env
    environment:
      - DB_URL=${DB_URL}
    entrypoint: ["migrate", "-path", "/migrations", "-database", "${DB_URL}"]
    command: ["up"]
    depends_on:
      rollplaydb:
        condition: service_healthy
    restart: on-failure
    networks:
      - rollplay
  rollplayapi:
    build:
      context: .
      dockerfile: ./.docker/golang/Dockerfile
    volumes:
      - ./:/usr/src/app
    container_name: rollplay-api-go
    env_file:
      - ./.env
    environment:
      - DOCKER=true
      - PORT=${PORT}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    ports:
      - "${PORT}:${PORT}"
    networks:
      - rollplay
    stdin_open: true
    tty: true
    depends_on:
      rollplaydb:
        condition: service_healthy
networks:
  rollplay:
    driver: bridge
